// Using with Target HTTPS Proxies
//
// SSL certificates cannot be updated after creation. In order to apply
// the specified configuration, Terraform will destroy the existing
// resource and create a replacement. To effectively use an SSL
// certificate resource with a Target HTTPS Proxy resource, it's
// recommended to specify create_before_destroy in a lifecycle block.
// Either omit the Instance Template name attribute, specify a partial
// name with name_prefix, or use random_id resource. Example:

resource "google_compute_global_address" "default" {
  name    = "${var.resource_prefix}-ptfe-ext-ip"
  address = var.lb_private_ip_address
}

resource "google_compute_ssl_certificate" "default" {
  name_prefix = "${var.ptfe_name}-"
  private_key = base64decode(data.google_kms_secret.tfe_private_key.plaintext)
  certificate = base64decode(data.google_kms_secret.tfe_ca_certificate.plaintext)

  lifecycle {
    create_before_destroy = true
  }
}

resource "google_compute_global_forwarding_rule" "ptfe_lb" {
  name                  = "${var.resource_prefix}-fr-${random_id.name_suffix.hex}"
  target                = google_compute_target_https_proxy.default.self_link
  port_range            = var.port_range
  load_balancing_scheme = "INTERNAL"
  ip_address            = google_compute_global_address.default.address
}

resource "google_compute_target_https_proxy" "default" {
  name             = "${var.resource_prefix}-proxy"
  url_map          = google_compute_url_map.default.self_link
  ssl_certificates = [google_compute_ssl_certificate.default.self_link]
}

resource "google_compute_url_map" "default" {
  name        = "${var.resource_prefix}-url-map"

  default_service = google_compute_backend_service.primary.self_link

  host_rule {
    hosts        = [lookup(var.lb_domain_url, var.environment)]
    path_matcher = "allpaths"
  }

  path_matcher {
    name            = "allpaths"
    default_service = google_compute_backend_service.primary.self_link

    path_rule {
      paths   = ["/*"]
      service = google_compute_backend_service.primary.self_link
    }
  }
}

resource "google_compute_backend_service" "primary" {
  name        = "${var.resource_prefix}-primary-backend"
  port_name   = "https"
  protocol    = "HTTPS"
  timeout_sec = 10

  health_checks = [google_compute_health_check.primary.self_link]

  backend {
    description = "Terraform Enterprise Servers"
    group       = element(google_compute_region_instance_group_manager.ptfe.*.instance_group, 0)
  }
}

resource "google_compute_health_check" "primary" {
  name                = "${var.resource_prefix}-primary-healthcheck"
  check_interval_sec  = 10
  timeout_sec         = 5
  healthy_threshold   = 3
  unhealthy_threshold = 10

  http_health_check {
    request_path = "/_health_check"
  }
}
